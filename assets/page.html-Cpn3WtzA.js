import{_ as a,c as n,a as e,o as l}from"./app-C9ghMS1y.js";const p={};function i(t,s){return l(),n("div",null,s[0]||(s[0]=[e(`<div class="hint-container caution"><p class="hint-container-title">Caution</p><p>LeptonJs is still in its early development stage, so use it with caution.</p></div><h1 id="page-vs-partial" tabindex="-1"><a class="header-anchor" href="#page-vs-partial"><span>Page Vs Partial</span></a></h1><p>In LeptonJs, components can be used as either Pages or Partials.</p><ul><li>Pages are full components rendered for specific endpoints and must be registered via Laravel routes.</li><li>Partials are reusable components that can be injected into any Page without requiring a dedicated route.</li></ul><p>Both Pages and Partials are created and written in the same way. However, a Page must be registered as a route, whereas a Partial does not require registration.</p><h2 id="creating-a-page" tabindex="-1"><a class="header-anchor" href="#creating-a-page"><span>Creating a Page</span></a></h2><p>You can use Laravel Command to create both Page and Partial. All the backend components(page &amp; partial) are stored in <code>app/Lepton</code> folder, and the Frontend Components are lies inside of <code>resources/js/Pages</code> directory. Creating a page generates both frontend and backend Components. The command is:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#FFA657;">php</span><span style="color:#A5D6FF;"> artisan</span><span style="color:#A5D6FF;"> make:lepton</span><span style="color:#A5D6FF;"> UsersList</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><p>This command generates two files in your application. The first will be the Backend&#39;s component class: <code>app/Lepton/UserList.php</code></p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#FF7B72;">&lt;?</span><span style="color:#79C0FF;">php</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">namespace</span><span style="color:#FFA657;"> App\\Lepton</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">use</span><span style="color:#79C0FF;"> Lepton\\Component</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> UserList</span><span style="color:#FF7B72;"> extends</span><span style="color:#79C0FF;"> Component</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">{</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">    public</span><span style="color:#FF7B72;"> function</span><span style="color:#D2A8FF;"> render</span><span style="color:#E6EDF3;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    {</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">        return</span><span style="color:#79C0FF;"> $this</span><span style="color:#FF7B72;">-&gt;</span><span style="color:#D2A8FF;">view</span><span style="color:#E6EDF3;">(</span><span style="color:#A5D6FF;">&#39;lepton.user-list&#39;</span><span style="color:#E6EDF3;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The second will be your frontend component in your preferred stack(Vue/Inertia): <code>resources/js/lepton/UserList.vue</code></p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#E6EDF3;">&lt;</span><span style="color:#7EE787;">template</span><span style="color:#E6EDF3;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    &lt;</span><span style="color:#7EE787;">div</span><span style="color:#E6EDF3;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#8B949E;">        &lt;!-- TODO: add your template here --&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    &lt;/</span><span style="color:#7EE787;">div</span><span style="color:#E6EDF3;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">&lt;/</span><span style="color:#7EE787;">template</span><span style="color:#E6EDF3;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">&lt;</span><span style="color:#7EE787;">script</span><span style="color:#79C0FF;"> setup</span><span style="color:#E6EDF3;">&gt;</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">    import</span><span style="color:#E6EDF3;"> { usePartial } </span><span style="color:#FF7B72;">from</span><span style="color:#A5D6FF;"> &quot;@leptonjs/leptonjs&quot;</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">    const</span><span style="color:#79C0FF;"> partial</span><span style="color:#FF7B72;"> =</span><span style="color:#D2A8FF;"> usePartial</span><span style="color:#E6EDF3;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">&lt;/</span><span style="color:#7EE787;">script</span><span style="color:#E6EDF3;">&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can organize your components into subdirectories using either namespace syntax or dot notation.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#FFA657;">php</span><span style="color:#A5D6FF;"> artisan</span><span style="color:#A5D6FF;"> make:lepton</span><span style="color:#A5D6FF;"> Users</span><span style="color:#FF7B72;">\\\\</span><span style="color:#A5D6FF;">UserList</span></span></span>
<span class="line"><span class="line"><span style="color:#FFA657;">php</span><span style="color:#A5D6FF;"> artisan</span><span style="color:#A5D6FF;"> make:lepton</span><span style="color:#A5D6FF;"> users.user-list</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="setting-properties" tabindex="-1"><a class="header-anchor" href="#setting-properties"><span>Setting properties</span></a></h2><h2 id="sharing-additional-data-with-the-view" tabindex="-1"><a class="header-anchor" href="#sharing-additional-data-with-the-view"><span>Sharing additional data with the view</span></a></h2><h2 id="method-calling" tabindex="-1"><a class="header-anchor" href="#method-calling"><span>Method Calling</span></a></h2><h2 id="passing-data-into-components" tabindex="-1"><a class="header-anchor" href="#passing-data-into-components"><span>Passing data into components</span></a></h2><h2 id="accessing-route-parameters" tabindex="-1"><a class="header-anchor" href="#accessing-route-parameters"><span>Accessing route parameters</span></a></h2><p>You can access to the route parameters within your both frontend and backend components. For example, let&#39;s define a route to show a details of a user as:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="routes/web.php"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#FF7B72;">use</span><span style="color:#79C0FF;"> App\\Lepton\\UserShow</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#79C0FF;">Route</span><span style="color:#FF7B72;">::</span><span style="color:#D2A8FF;">get</span><span style="color:#E6EDF3;">(</span><span style="color:#A5D6FF;">&#39;users/{id}&#39;</span><span style="color:#E6EDF3;">, </span><span style="color:#79C0FF;">UserShow</span><span style="color:#FF7B72;">::class</span><span style="color:#E6EDF3;">);</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>The route parameters in your backend component can be accessed via <code>mount</code> method, you can define a <code>mount</code> method to access the route parameters.</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre class="shiki github-dark-default vp-code" style="background-color:#0d1117;color:#e6edf3;"><code><span class="line"><span class="line"><span style="color:#FF7B72;">&lt;?</span><span style="color:#79C0FF;">php</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">namespace</span><span style="color:#FFA657;"> App\\Lepton</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">use</span><span style="color:#79C0FF;"> App\\Models\\User</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">use</span><span style="color:#79C0FF;"> Lepton\\Component\\Component</span><span style="color:#E6EDF3;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">class</span><span style="color:#FFA657;"> UserShow</span><span style="color:#FF7B72;"> extends</span><span style="color:#79C0FF;"> Component</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">{</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">    public</span><span style="color:#79C0FF;"> User</span><span style="color:#E6EDF3;"> $user;</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    </span></span></span>
<span class="line"><span class="line"><span style="color:#79C0FF;">    pubic</span><span style="color:#FF7B72;"> function</span><span style="color:#D2A8FF;"> mount</span><span style="color:#E6EDF3;">($id)</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    {</span></span></span>
<span class="line"><span class="line"><span style="color:#79C0FF;">        $this</span><span style="color:#FF7B72;">-&gt;</span><span style="color:#E6EDF3;">user </span><span style="color:#FF7B72;">=</span><span style="color:#79C0FF;"> User</span><span style="color:#FF7B72;">::</span><span style="color:#D2A8FF;">query</span><span style="color:#E6EDF3;">()</span><span style="color:#FF7B72;">-&gt;</span><span style="color:#D2A8FF;">findOrFail</span><span style="color:#E6EDF3;">($id)    </span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    </span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">    public</span><span style="color:#FF7B72;"> function</span><span style="color:#D2A8FF;"> render</span><span style="color:#E6EDF3;">()</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    {</span></span></span>
<span class="line"><span class="line"><span style="color:#FF7B72;">        return</span><span style="color:#79C0FF;"> $this</span><span style="color:#FF7B72;">-&gt;</span><span style="color:#D2A8FF;">view</span><span style="color:#E6EDF3;">(</span><span style="color:#A5D6FF;">&#39;Lepton/Users/UserShow&#39;</span><span style="color:#E6EDF3;">);</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#E6EDF3;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23)]))}const r=a(p,[["render",i],["__file","page.html.vue"]]),c=JSON.parse('{"path":"/page.html","title":"Page","lang":"en-US","frontmatter":{"lang":"en-US","title":"Page","description":"Page & Partial in LeptonJs"},"headers":[{"level":2,"title":"Creating a Page","slug":"creating-a-page","link":"#creating-a-page","children":[]},{"level":2,"title":"Setting properties","slug":"setting-properties","link":"#setting-properties","children":[]},{"level":2,"title":"Sharing additional data with the view","slug":"sharing-additional-data-with-the-view","link":"#sharing-additional-data-with-the-view","children":[]},{"level":2,"title":"Method Calling","slug":"method-calling","link":"#method-calling","children":[]},{"level":2,"title":"Passing data into components","slug":"passing-data-into-components","link":"#passing-data-into-components","children":[]},{"level":2,"title":"Accessing route parameters","slug":"accessing-route-parameters","link":"#accessing-route-parameters","children":[]}],"git":{"updatedTime":1740167374000,"contributors":[{"name":"Bedram Tamang","username":"Bedram Tamang","email":"tmgbedu@gmail.com","commits":1,"url":"https://github.com/Bedram Tamang"}]},"filePathRelative":"page.md"}');export{r as comp,c as data};
